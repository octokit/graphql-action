"on":
  - push
name: Test
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - run: npm ci
      - run: npm run lint
  readmeExample:
    name: "[TEST] README example"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - run: npm ci
      - run: npm run build
      - uses: ./
        id: get_latest_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          query: |
            query release($owner:String!,$repo:String!) {
              repository(owner:$owner,name:$repo) {
                releases(first:1) {
                  nodes {
                    name
                    createdAt
                    tagName
                    description
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.name }}
          repo: ${{ github.event.repository.name }}
      - run: "echo latest release: '${{ steps.get_latest_release.outputs.data }}'"
      - id: test_with_int_arg
        uses: ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          query: |
            query pr_commits($pr_number: Int!) {
              repository(owner: "octokit", name: "graphql-action") {
                pullRequest(number: $pr_number) {
                  commits(first: 10) {
                    edges {
                      node {
                        commit {
                          message
                        }
                      }
                    }
                  }
                }
              }
            }
          pr_number: 1
      - id: check_int_arg
        env:
          JSON_DATA: ${{ steps.test_with_int_arg.outputs.data }}
        run: >
          COMMITS_COUNT=$(echo ${JSON_DATA} | jq
          '.repository.pullRequest.commits[] | length')

          [[ ${COMMITS_COUNT} -eq 6 ]] && exit 0 || exit 1
      - id: test_with_mediaType_previews
        uses: ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          query: |
            query {
              repository(owner: "octokit", name: "graphql-action") {
                packages(first: 1) {
                  totalCount
                }
              }
            }
          mediaType: '{"previews": ["packages"]}'
      - run: "echo packages: '${{ steps.test_with_mediaType_previews.outputs.data }}'"
      - id: test_with_mediaType_previews_yaml
        uses: ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          query: |
            query  pullRequest(
              $repo:String!
              $owner:String!) {
              repository(name:$repo, owner:$owner) {
                pullRequests(last:1) {
                  nodes {
                    number
                    mergeStateStatus
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.name }}
          repo: ${{ github.event.repository.name }}
          mediaType: |
            previews:
            - merge-info
      - run: "echo merge state status: '${{ steps.test_with_mediaType_previews_yaml.outputs.data }}'"
      - uses: ./
        id: get_latest_release_with_variables_parameter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          query: |
            query release($owner:String!,$repo:String!) {
              repository(owner:$owner,name:$repo) {
                releases(first:1) {
                  nodes {
                    name
                    createdAt
                    tagName
                    description
                  }
                }
              }
            }
          variables: |
            owner: ${{ github.event.repository.owner.name }}
            repo: ${{ github.event.repository.name }}
      - run: "echo latest release: '${{ steps.get_latest_release_with_variables_parameter.outputs.data }}'"
      - id: get_commits_of_pull_request_with_variables_parameter
        uses: ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          query: |
            query pr_commits($pr_number: Int!) {
              repository(owner: "octokit", name: "graphql-action") {
                pullRequest(number: $pr_number) {
                  commits(first: 10) {
                    edges {
                      node {
                        commit {
                          message
                        }
                      }
                    }
                  }
                }
              }
            }
          variables: |
            pr_number: 1
      - env:
          JSON_DATA: ${{ steps.get_commits_of_pull_request_with_variables_parameter.outputs.data }}
        run: >
          COMMITS_COUNT=$(echo ${JSON_DATA} | jq
          '.repository.pullRequest.commits[] | length')

          [[ ${COMMITS_COUNT} -eq 6 ]] && exit 0 || exit 1
